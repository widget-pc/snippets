<snippet>
	<content><![CDATA[

//use Rules\\${2:Resource}RulesValidation;
use Services\\${2:Resource}Service;

class ${1:Name}Controller extends ExtendedController {

	/**
	 * @var Validation rules
	 */
	protected \$Rules;
	

    /*
     * Constructor
     * @param  Model/${2:Model} object
     */
	public function __construct(${2:Model} \$model){

        \$this->Model = \$model;
		\$this->Service = new ${2:Resource}Service();
        /*\$this->Rules = new ${2:Resource}RulesValidation(); */

        parent::__construct(array( 'before_filter' => array('dummy', 'data_lenght'), 'after_filter' => array('status_response')) );
	}


	/**
	 * Display a listing of the resource.
	 * GET /${1/^(\w)|(?:_(\w))/(?1\l$1:)(?2 \l$2:)/g}
	 *
	 * @return Response
	 */
	public function index(){
		\$data = \$this->Service->getIndex(\$this->Model);
		return \$this->StatusResponse->setStatusMessage(\$data['message'])
									->response( \$data['isSuccess'], array('${1/^(\w)|(?:_(\w))/(?1\l$1:)(?2 \l$2:)/g}' => \$data['response']->getItems(), 'pagination' => $2::getPagination(\$data['response']))); 
	}


	/**
	 * Store a newly created resource in storage.
	 * POST /${1/^(\w)|(?:_(\w))/(?1\l$1:)(?2 \l$2:)/g}
	 *
	 * @return Response
	 */
	public function store(){
		\$input  = Input::all();
		\$data = \$this->Service->store(\$input, \$this->Model/*, $this->Rules */);

		return \$this->StatusResponse->setStatusMessage(\$data['message'])
									->response(\$data['isSuccess'], array('id' => \$data['response'])); 
	}


	/**
	 * Display the specified resource.
	 * GET /${1/^(\w)|(?:_(\w))/(?1\l$1:)(?2 \l$2:)/g}/{id}
	 *
	 * @param  int  \$id
	 * @return Response
	 */
	public function show(\$id){
		\$data = \$this->Service->getShow(\$this->Model, \$id);

		return \$this->StatusResponse->setStatusMessage(\$data['message'])
									->response(\$data['isSuccess'], array('${2/^(\w)|(?:_(\w))/(?1\l$1:)(?2 \l$2:)/g}' => \$data['response'])); 
	}


	/**
	 * Update the specified resource in storage.
	 * PUT /${1/^(\w)|(?:_(\w))/(?1\l$1:)(?2 \l$2:)/g}/{id}
	 *
	 * @param  int  \$id
	 * @return Response
	 */
	public function update(\$id){
		\$input = Input::all();
        \$data = \$this->Service->update(\$id, \$this->Model, \$input/*, $this->Rules */);

        return \$this->StatusResponse->setStatusMessage(\$data['message'])
        							->response(\$data['isSuccess'], array('id' => \$data['response']));
	}


	/**
	 * Remove the specified resource from storage.
	 * DELETE /${1/^(\w)|(?:_(\w))/(?1\l$1:)(?2 \l$2:)/g}/{id}
	 *
	 * @param  int $id
	 * @return Response
	 */
	public function destroy(\$id){
		\$data = \$this->Service->deleteDestroy(\$this->Model, \$id);

		return \$this->StatusResponse->setStatusMessage(\$data['message'])
									->response(\$data['isSuccess'], \$data['response']);
	}
}

${3:
/**
 * Dont forget create:
 * --> {Resource\}RulesValidation file 
 * --> {Resource\}Service file 
 */}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>extendedController</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.php</scope> -->
</snippet>
